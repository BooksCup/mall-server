<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.mall.server.mapper.UserMapper">

    <resultMap id="user" type="com.bc.mall.server.entity.User">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="token" property="token" jdbcType="VARCHAR"/>
        <result column="wx_openid" property="wxOpenid" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getUserListByUserName" parameterType="String" resultMap="user">
        select
        *
        from t_user
        where user_name = #{userName}
        and store_id = #{storeId}
    </select>

    <select id="getUserListByPhone" parameterType="String" resultMap="user">
        select
        *
        from t_user
        where phone = #{phone}
        and store_id = #{storeId}
    </select>

    <select id="getUserListByToken" parameterType="map" resultMap="user">
        select
        *
        from t_user
        where token = #{token}
        and store_id = #{storeId}
    </select>

    <select id="getUserListByOpenId" parameterType="map" resultMap="user">
        select
        *
        from t_user
        where wx_openid = #{openid}
        and store_id = #{storeId}
    </select>

    <select id="getUserListByAccount" parameterType="String" resultMap="user">
        select
        *
        from t_user
        where
        (user_name = #{account} or phone = #{account})
        and store_id = #{storeId}
    </select>

    <update id="updateUserByLogin" parameterType="com.bc.mall.server.entity.User">
        update t_user
        set token = #{token},
        login_times = login_times + 1,
        last_login_time = now()
        where id = #{id}
    </update>

    <update id="updateUserToken" parameterType="com.bc.mall.server.entity.User">
        update t_user
        set token = #{token}
        where id = #{id}
    </update>

    <insert id="addUser" parameterType="com.bc.mall.server.entity.User">
        insert into t_user
        (
        id,
        store_id,
        user_name,
        phone,
        avatar,
        password,
        token,
        source
        )
        values
        (
        #{id},
        #{storeId},
        #{userName},
        #{phone},
        #{avatar},
        #{password},
        #{token},
        #{source}
        )
    </insert>

    <!-- 通过微信授权新增用户 -->
    <insert id="addUserByWechatAuth" parameterType="com.bc.mall.server.entity.User">
        insert into t_user
        (
        id,
        store_id,
        wx_openid,
        user_name,
        avatar,
        sex,
        token,
        source
        )
        values
        (
        #{id},
        #{storeId},
        #{wxOpenid},
        #{userName},
        #{avatar},
        #{sex},
        #{token},
        #{source}
        )
    </insert>

    <update id="updateUserByWechatAuth" parameterType="com.bc.mall.server.entity.User">
        update t_user
        set
        user_name = #{userName},
        avatar = #{avatar},
        sex = #{sex},
        token = #{token}
        where id = #{id}
    </update>

</mapper>