<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bc.mall.server.mapper.GoodsMapper">

    <resultMap id="goods" type="com.bc.mall.server.entity.Goods">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="store_id" property="storeId" jdbcType="VARCHAR"/>
        <result column="shop_id" property="shopId" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="short_name" property="shortName" jdbcType="VARCHAR"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="sales_volume" property="salesVolume" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="is_distribution" property="isDistribution" jdbcType="VARCHAR"/>
        <result column="activity" property="activity" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <result column="sell_price" property="sellPrice" jdbcType="VARCHAR"/>
        <result column="orig_price" property="origPrice" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="goodsAlbum" type="com.bc.mall.server.entity.GoodsAlbum">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="goods_id" property="goodsId" jdbcType="VARCHAR"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getGoodsListByGoodsClass" parameterType="map" resultMap="goods">
        select
        g.*,
        min(sku.sell_price) as sell_price,
        sku.orig_price
        from
        t_goods g
        right join t_goods_sku sku on g.id = sku.goods_id
        left join t_shop s on g.shop_id = s.id
        where g.store_id = #{storeId}
        and g.goods_class_id like concat('%', #{goodsClassId}, '%')
        and g.status = '2'
        and g.shop_status = '2'
        and g.delete_status = '0'
        and g.activity = '1'
        and s.is_open = '1'
        group by sku.goods_id
        order by g.create_time, g.sort desc
        limit 10
    </select>

    <select id="getLikeGoodsList" parameterType="map" resultMap="goods">
        select
        g.*,
        min(sku.sell_price) as sell_price,
        sku.orig_price
        from
        t_goods g
        right join t_goods_sku sku on g.id = sku.goods_id
        left join t_shop s on g.shop_id = s.id
        where g.store_id = #{storeId}
        and g.status = '2'
        and g.shop_status = '2'
        and g.delete_status = '0'
        and g.activity = '1'
        and s.is_open = '1'
        and g.show_address like '%1%'
        group by sku.goods_id
        order by g.create_time, g.sort desc
    </select>

    <select id="getGoodsListByGoodsId" parameterType="map" resultMap="goods">
        select
        g.*
        from
        t_goods g
        where g.store_id = #{storeId}
        and g.id = #{goodsId}
    </select>

    <select id="getGoodsAlbumListByGoodsId" parameterType="String" resultMap="goodsAlbum">
        select
        *
        from t_goods_album
        where goods_id = #{goodsId}
    </select>

    <select id="getRecommendGoodsListByShopId" parameterType="map" resultMap="goods">
        select
        g.*,
        min(sku.sell_price) as sell_price,
        sku.orig_price
        from
        t_goods g
        right join t_goods_sku sku on g.id = sku.goods_id
        left join t_shop s on g.shop_id = s.id
        where g.store_id = #{storeId}
        and g.shop_id = #{shopId}
        and g.delete_status = '0'
        and g.activity = '1'
        and s.is_open = '1'
        group by sku.goods_id
        order by g.sales_volume desc
    </select>

    <select id="getAllGoodsListByShopId" parameterType="map" resultMap="goods">
        select
        g.*,
        min(sku.sell_price) as sell_price,
        sku.orig_price
        from
        t_goods g
        right join t_goods_sku sku on g.id = sku.goods_id
        left join t_shop s on g.shop_id = s.id
        where g.store_id = #{storeId}
        and g.shop_id = #{shopId}
        and g.delete_status = '0'
        and g.activity = '1'
        and s.is_open = '1'
        group by sku.goods_id
        order by g.create_time, g.sort desc
    </select>

</mapper>